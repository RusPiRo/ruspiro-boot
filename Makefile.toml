#***********************************************************************************************************************
# cargo make tasks to build the example for the Raspberry Pi
#***********************************************************************************************************************
[env.development]
CC = "aarch64-none-elf-gcc"
AR = "aarch64-none-elf-ar"
CFLAGS = "-march=armv8-a -Wall -O3 -nostdlib -nostartfiles -ffreestanding -mtune=cortex-a53"
RUSTFLAGS = "-C target-cpu=cortex-a53 -C target-feature=+strict-align,+a53,+fp-armv8,+neon -C link-arg=-T./link64.ld"

[env.pipeline]
CC = "aarch64-linux-gnu-gcc"
AR = "aarch64-linux-gnu-ar"
CFLAGS = "-march=armv8-a -Wall -O3 -nostdlib -nostartfiles -ffreestanding -mtune=cortex-a53"
RUSTFLAGS = "-C target-cpu=cortex-a53 -C target-feature=+strict-align,+a53,+fp-armv8,+neon -C link-arg=-T./link64.ld"

[tasks.build]
command = "cargo"
args = ["build", "--release", "--features", "${FEATURES}"]

[tasks.clippy]
env = { FEATURES = "" }
command = "cargo"
args = ["clippy", "--features", "${FEATURES}"]

[tasks.doc]
env = { FEATURES = "" }
command = "cargo"
args = ["doc", "--features", "${FEATURES}", "--open"]

[tasks.pi3]
env = { FEATURES = "" }
run_task = "build"

[tasks.clean]
command = "cargo"
args = ["clean"]

[tasks.publish_dry]
env = { FEATURES = "" }
command = "cargo"
args = ["publish", "--dry-run", "--features", "${FEATURES}"]

[tasks.publish]
env = { FEATURES = "" }
command = "cargo"
args = ["publish", "--token", "${CRATES_TOKEN}", "--allow-dirty", "--features", "${FEATURES}"]
