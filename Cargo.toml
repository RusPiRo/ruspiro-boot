[package]
name = "ruspiro-boot"
authors = ["Andr√© Borrmann <pspwizard@gmx.de>"]
version = "0.5.4" # remember to update html_root_url
description = """
Bare metal boot strapper code for the Raspberry Pi 3 to conviniently start a custom kernel within the Rust environment
without the need to deal with all the initial setup like stack pointers, switch to the appropriate exeption level and getting all cores kicked off for processing of code compiled from Rust.
"""
license = "Apache-2.0 OR MIT"
repository = "https://github.com/RusPiRo/ruspiro-boot/tree/v||VERSION||"
documentation = "https://docs.rs/ruspiro-boot/||VERSION||"
readme = "README.md"
keywords = ["RusPiRo", "aarch64", "boot", "baremetal", "multicore"]
categories = ["no-std", "embedded"]
edition = "2021"
# define a linkage name to ensure this crate is ever beeing linked once into a final binary
links = "ruspiro_boot"
# compile the assembler parts before the rust compiler runs on this crate
build = "build.rs"
exclude = ["Makefile.toml", ".cargo/config.toml", "examples"]

[badges]
maintenance = { status = "actively-developed" }

[lib]

[build-dependencies]
cc = "~1.0"

[dependencies]
log = { version = "~0.4.14", default-features = false }
ruspiro-register = "~0.5.5"
ruspiro-cache = "~0.4.1"

[features]
default = ["panic"]
# activate this feature to get multicore support 
multicore = []
# activate this feature to provide a default panic handler
panic = []

# ensure the required features of the crate are active for the doc.rs build
[package.metadata.docs.rs]
default-target = "aarch64-unknown-linux-gnu"
features = [
    "multicore",
    "panic"
]

[patch.crates-io]
ruspiro-register = { git = "https://github.com/RusPiRo/ruspiro-register.git", branch = "development" }
ruspiro-cache = { git = "https://github.com/RusPiRo/ruspiro-cache.git", branch = "development" }
